/* Style for the file upload container */
.file-upload-container {
  display: flex;
  align-items: center;
  justify-content: flex-end; /* Align the content to the right */
}

/* Style for the button/icon to show the file upload component */
.file-upload-container button {
  color: #fff;
  border: none;
  padding: 5px 10px;
  cursor: pointer;
}

/* Style for the file upload component (initially hidden) */
.file-upload-container p-fileUpload {
  display: none;
}

/* Style for the file upload component when displayed */
.show p-fileUpload {
  display: block;
}

.labelClass {
  color: #fff;
  font-weight: bold;
  height: 25px;
}
.vertical-options {
  display: flex;

  flex-direction: column;
}

.optionR {
  .p-radiobutton {
    margin: 0.25rem 0.25rem 0.25rem 0.25rem;
  }
}

.fileupload {
  display: flex;
  justify-content: end;
}

//question display

.question_sec_dis {
  max-height: 440px;
  overflow-y: scroll;
  // visibility: hidden;
  &:hover {
    visibility: visible;
    // overflow-y: scroll;
  }
}

.asses_hdr {
  background: #93bfcf;
  color: #1e1d1d;
  text-align: center;
  font-size: 1.25rem;
  line-height: 1;
}
.add_icon{
  align-items: end;
}

.table-container {
  max-width: 100%;
  overflow-x: auto;
}

.design-table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
  background-color: #fff;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.design-table th,
.design-table td {
  padding: 8px;
  text-align: left;
}
.table_dropdown {
  height: 35px;
  width: 250px;
}
.design-table th {
  background-color: #f5f5f5;
  font-weight: bold;
}

.table-row:nth-child(even) {
  background-color: #f2f2f2;
}

.checkbox-column {
  width: 1%;
}

.skill-column {
  width: 40%;
}

.difficulty-column {
  width: 10%;
  /* Adjust the width as needed */
}

.edit-icon {
  width: 10%;
}
.view-icon {
  width: 10%;
}

.delete-icon {
  width: 10%;
}

.difficulty-badge {
  display: inline-block;
  padding: 4px 8px;
  font-size: 12px;
  font-weight: 500;
  border-radius: 12px;
  letter-spacing: 0.25px;
  text-align: center;
  letter-spacing: 0.25px;
}

.difficulty-badge.easy {
  background-color: #5cb85c;
  /* Green for Easy difficulty */
  color: #fff;
}

.difficulty-badge.medium {
  background-color: #f0ad4e;
  /* Orange for Medium difficulty */
  color: #fff;
}

.difficulty-badge.hard {
  background-color: #d9534f;
  /* Red for Hard difficulty */
  color: #fff;
}

.question-column {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.checkbox-column input[type="checkbox"] {
  margin: 0;
}
.save_button {
  width: 40px;

  height: 40px;

  align-items: center;

  justify-content: center;

  border-radius: 50%;

  border: 2px solid #fff;

  // margin-left: 90%;

  margin-top: 19px;

  margin-right: 19px;
}
.top-right-button {
  position: absolute;
  top: 0;
  right: 0;
  margin: 10px;
  align-self: flex-end;
  cursor: pointer;
}
.top-left-button {
  align-self: flex-start;
  margin: 10px;
  cursor: pointer;
}

.page_top_sec {
  background: #526d82;

  height: 70px;

  padding-left: 0px;

  margin-left: 0px;

  margin-bottom: 20px;

  position: relative;
}

.save_sec {
  width: 40px;

  height: 40px;

  display: flex;

  align-items: center;

  justify-content: center;

  border: 1px solid #fff;

  border-radius: 20px;
}

.option-input {
  margin-bottom: 10px; /* Add spacing between each option */
}
.title {
  color: white;
  margin-bottom: 1rem;
}
.dialoginput {
  height: 76px;
  display: flex;
  flex-direction: column;
}
.option-label {
  margin-right: 10px; /* Add spacing between the label and input box */
}

.option-box {
  display: inline;
  height: 35px;
  width: 250px;
}

.skill_dropdown{
height: 35px;
  width: 250px;
}
.d-hide {
  .p-inputtext.ng-dirty.ng-invalid {
    border-color: "";
  }
}

.radio-option {
  display: inline;
  margin-right: 10px;
}

.wide-input {
  width: 250px;
  height: 35px;
}
.addques {
  padding-left: 20%;
}
.btn {
  font-size: 0.875rem;
  background-color: #526d82;
  border-color: #526d82;
  border-radius: 4px;
  color: #fff;
  padding: 5px 10px;
  border: none;
  cursor: pointer;
}
